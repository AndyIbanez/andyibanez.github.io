<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Cryptokit on Andy Ibanez</title><link>https://www.andyibanez.com/tags/cryptokit/</link><description>Recent content in Cryptokit on Andy Ibanez</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Mon, 14 Sep 2020 07:00:00 -0400</lastBuildDate><atom:link href="https://www.andyibanez.com/tags/cryptokit/index.xml" rel="self" type="application/rss+xml"/><item><title>WWDC2020: What's new in CryptoKit</title><link>https://www.andyibanez.com/posts/wwdc2020-whats-new-cryptokit/</link><pubDate>Mon, 14 Sep 2020 07:00:00 -0400</pubDate><guid>https://www.andyibanez.com/posts/wwdc2020-whats-new-cryptokit/</guid><description>&lt;p>CryptoKit, introduced in WWDC2019, allows us to &lt;a href="https://www.andyibanez.com/posts/common-cryptographic-operations-with-cryptokit/">perform cryptographic operations very easily&lt;/a>.&lt;/p>
&lt;p>While CryptoKit still doesn&amp;rsquo;t offer many algorithms and functionality, it&amp;rsquo;s still growing, and this year CryptoKit and do more.&lt;/p>
&lt;h1 id="hkdf">HKDF&lt;/h1>
&lt;p>Key derivation functions have been available from day one, but it wasn&amp;rsquo;t possible to derive keys independently. It was only possible to do so if you were using elliptic curve key agreement protocols.&lt;/p>
&lt;p>To do this, there is a new &lt;code>HKDF&lt;/code> object with static methods. One such method is &lt;code>deriveKey&lt;/code> with multiple overloads:&lt;/p></description></item><item><title>CryptoKit and the Secure Enclave</title><link>https://www.andyibanez.com/posts/cryptokit-secure-enclave/</link><pubDate>Wed, 15 Jan 2020 07:00:00 -0400</pubDate><guid>https://www.andyibanez.com/posts/cryptokit-secure-enclave/</guid><description>&lt;p>CryptoKit and the Secure Enclave&lt;/p>
&lt;p>Apple&amp;rsquo;s &lt;a href="https://www.andyibanez.com/posts/common-cryptographic-operations-with-cryptokit/">CryptoKit&lt;/a> introduced this year is full of amazing features. Not only does it offer very easy to use cryptography, but it also offers an interface to a security feature that Apple introduced less than a decade ago: The Secure Enclave.&lt;/p>
&lt;p>The Secure Enclave is a hardware feature for helping the system work with cryptographically secure data. In this article, we will build upon our previous CryptoKit knowledge (see the article linked above), and we will also learn what the Secure Enclave is all about.&lt;/p></description></item><item><title>When CryptoKit is not Enough</title><link>https://www.andyibanez.com/posts/cryptokit-not-enough/</link><pubDate>Wed, 06 Nov 2019 07:00:00 -0400</pubDate><guid>https://www.andyibanez.com/posts/cryptokit-not-enough/</guid><description>&lt;p>&lt;em>This article is a continuation to my &lt;a href="https://www.andyibanez.com/posts/common-cryptographic-operations-with-cryptokit/%5D">Common Cryptographic Operations with CryptoKit&lt;/a> article. If you want to learn how to use CryptoKit, read that one instead, and come to this one when you need a feature not offered by it.&lt;/em>&lt;/p>
&lt;p>As I have been playing with the amazing CryptoKit framework in the past few weeks, I have discovered a few more things that CryptoKit currently doesn&amp;rsquo;t do. This is not generally a bad thing, and I &lt;em>think&lt;/em> these limitations are related to what seem to be the goal of the framework:&lt;/p></description></item><item><title>Common Cryptographic Operations With CryptoKit</title><link>https://www.andyibanez.com/posts/common-cryptographic-operations-with-cryptokit/</link><pubDate>Wed, 09 Oct 2019 07:00:00 -0400</pubDate><guid>https://www.andyibanez.com/posts/common-cryptographic-operations-with-cryptokit/</guid><description>&lt;p>Apple has always taken security very seriously, so it&amp;rsquo;s expected that they would provide developers with the same tools they have to help developers implement the same security measures in their apps. This year, Apple introduced &lt;code>CryptoKit&lt;/code>.&lt;/p>
&lt;p>Apple providing new cryptography tools is nothing new. They have provided the &lt;code>Security&lt;/code> framework for a &lt;em>very&lt;/em> long time, and a few years later they introduced &lt;code>CommonCrypto&lt;/code>. The problem with these frameworks is that they can be very low level, being written in C, and it can be intimidating for new developers to adopt them in their project. &lt;code>CryptoKit&lt;/code> abstracts a lot of the details and it provides easier interfaces for common operations such as hashing, encrypting, and even signing.&lt;/p></description></item></channel></rss>