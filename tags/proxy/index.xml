<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Proxy on Andy Ibanez</title><link>https://www.andyibanez.com/tags/proxy/</link><description>Recent content in Proxy on Andy Ibanez</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Wed, 10 Feb 2021 07:00:00 -0400</lastBuildDate><atom:link href="https://www.andyibanez.com/tags/proxy/index.xml" rel="self" type="application/rss+xml"/><item><title>Intercepting iOS Network Request Calls with Proxyman</title><link>https://www.andyibanez.com/posts/intercepting-ios-network-request-calls-proxyman/</link><pubDate>Wed, 10 Feb 2021 07:00:00 -0400</pubDate><guid>https://www.andyibanez.com/posts/intercepting-ios-network-request-calls-proxyman/</guid><description>&lt;p>Intercepting iOS Network Request Calls with Proxyman&lt;/p>
&lt;p>Working with network APIs can be tricky, especially when debugging. You oftentimes have to ask yourself if your app is sending and receiving the expected information. You also often worry about whether the web service returns whatever it promises it will return. Working with APIs is both easy and tricky due to all the implications behind the scenes. What happens if the service goes down and sends unexpected responses? Or if your app loses internet connection? Using a proxy to intercept network calls will help us answer these questions.&lt;/p></description></item><item><title>Intercepting Network Traffic with mitmproxy</title><link>https://www.andyibanez.com/posts/intercepting-network-mitmproxy/</link><pubDate>Wed, 20 Nov 2019 07:00:00 -0400</pubDate><guid>https://www.andyibanez.com/posts/intercepting-network-mitmproxy/</guid><description>&lt;p>If you have been programming mobile apps for a while, you must have used a web based API - JSON based or otherwise - and you have had to deal with bugs related to your requests and responses to a web service. You have likely asked yourself why some parsing code is not working as expected, or why a request seems to have an invalid format. Intercepting your own network calls with a proxy can help you find the answer to these questions.&lt;/p></description></item></channel></rss>