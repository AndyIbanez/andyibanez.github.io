<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Sequences on Andy Ibanez</title><link>https://www.andyibanez.com/tags/sequences/</link><description>Recent content in Sequences on Andy Ibanez</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Wed, 25 Nov 2020 07:00:00 -0400</lastBuildDate><atom:link href="https://www.andyibanez.com/tags/sequences/index.xml" rel="self" type="application/rss+xml"/><item><title>Lazy Sequences in Swift</title><link>https://www.andyibanez.com/posts/lazy-sequences-in-swift/</link><pubDate>Wed, 25 Nov 2020 07:00:00 -0400</pubDate><guid>https://www.andyibanez.com/posts/lazy-sequences-in-swift/</guid><description>&lt;p>Lazy Sequences in Swift&lt;/p>
&lt;p>If you have been writing Swift for a while, you have undoubtedly used high order functions such as &lt;code>.map&lt;/code> and &lt;code>filter&lt;/code>. These higher order function work on any collection, and they are very useful when we want to quickly transform objects into something else, or when you want to do other operations in sequences that would otherwise take more than one line of code if you were to make them with loops.&lt;/p></description></item></channel></rss>