<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Faceid on Andy Ibanez</title><link>https://www.andyibanez.com/tags/faceid/</link><description>Recent content in Faceid on Andy Ibanez</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Wed, 12 May 2021 07:00:00 -0400</lastBuildDate><atom:link href="https://www.andyibanez.com/tags/faceid/index.xml" rel="self" type="application/rss+xml"/><item><title>Integrating FaceID/TouchID with SwiftUI</title><link>https://www.andyibanez.com/posts/integrating-face-id-touch-id-swiftui/</link><pubDate>Wed, 12 May 2021 07:00:00 -0400</pubDate><guid>https://www.andyibanez.com/posts/integrating-face-id-touch-id-swiftui/</guid><description>&lt;p>As SwiftUI is still relatively new, and it is not clear yet for many people how to use MVVM on iOS, I decided to write this short article in which I explain how one would integrate Face ID/Touch ID with SwiftUI.&lt;/p>
&lt;p>Let&amp;rsquo;s remember that SwiftUI uses the MVVM design pattern over the traditional MVC, and this can be confusing for people who are migrating to the new pattern for the first time. That said, the main takeaway from this article is to understand that views get destroyed and rebuilt &lt;em>very&lt;/em> often in SwiftUI, and therefore the right place to write this kind of logic is in the &lt;code>ViewModel&lt;/code>&lt;/p></description></item></channel></rss>