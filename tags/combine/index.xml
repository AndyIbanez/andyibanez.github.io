<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Combine on Andy Ibanez</title><link>https://www.andyibanez.com/tags/combine/</link><description>Recent content in Combine on Andy Ibanez</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Wed, 12 Aug 2020 07:00:00 -0400</lastBuildDate><atom:link href="https://www.andyibanez.com/tags/combine/index.xml" rel="self" type="application/rss+xml"/><item><title>A File Download Queue in Combine for Swift</title><link>https://www.andyibanez.com/posts/file-download-queue-combine/</link><pubDate>Wed, 12 Aug 2020 07:00:00 -0400</pubDate><guid>https://www.andyibanez.com/posts/file-download-queue-combine/</guid><description>&lt;p>Combine allows us to create pipelines for a lot of tasks. Thanks to the fact it can do work concurrently without leveraging callbacks, it is very easy to build things that would otherwise be very complex.&lt;/p>
&lt;p>In this short article, we will build a file download queue that downloads images sequentially. You can use this as the base for more complex queues.&lt;/p>
&lt;p>The queue will download an array of images sequentially. If you wanted to support concurrent queues, it would probably be wise to instantiate this publisher as many times as necessary.&lt;/p></description></item><item><title>Wrapping Asynchronous APIs into Combine Futures</title><link>https://www.andyibanez.com/posts/wrapping-asynchronous-apis-into-combine-futures/</link><pubDate>Wed, 22 Jul 2020 07:00:00 -0400</pubDate><guid>https://www.andyibanez.com/posts/wrapping-asynchronous-apis-into-combine-futures/</guid><description>&lt;p>Two of the concepts used a lot in Reactive Programming are the &lt;em>Future&lt;/em> and &lt;em>Promises&lt;/em>. Whether you have been using Combine for a while or are new to Reactive Programming, chances are you have seen these two words. These terms date to years ago. And I would be lying if I told you I knew what that they were for until I started learning Combine. The first time I heard about Futures and Promises was back in my NodeJS job half a decade ago, and I didn&amp;rsquo;t understand these concepts back then.&lt;/p></description></item></channel></rss>