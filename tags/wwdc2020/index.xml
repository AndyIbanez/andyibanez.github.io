<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Wwdc2020 on Andy Ibanez</title><link>https://www.andyibanez.com/tags/wwdc2020/</link><description>Recent content in Wwdc2020 on Andy Ibanez</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Wed, 02 Dec 2020 07:00:00 -0400</lastBuildDate><atom:link href="https://www.andyibanez.com/tags/wwdc2020/index.xml" rel="self" type="application/rss+xml"/><item><title>Understanding the Limited Photo Library in iOS 14</title><link>https://www.andyibanez.com/posts/understanding-limited-photo-library-ios-14/</link><pubDate>Wed, 02 Dec 2020 07:00:00 -0400</pubDate><guid>https://www.andyibanez.com/posts/understanding-limited-photo-library-ios-14/</guid><description>&lt;p>This year, Apple introduced a new feature that gives users even more control over what photos may third party apps see when they see a Photo Picker. The system will first present an alert asking users if they want to give access to their photos at all, and they have the option to give access to all their photos, or only to the photos they choose.&lt;/p>
&lt;p>This is great, but it has been a very confusing experience for both users and developers alike. In this article we will explore this new privacy-focused photo picker and how to make good use of it without compromising too much of either usability and privacy.&lt;/p></description></item><item><title>Formatting Notes and Gotchas</title><link>https://www.andyibanez.com/posts/formatting-notes-and-gotchas/</link><pubDate>Wed, 30 Sep 2020 07:00:00 -0400</pubDate><guid>https://www.andyibanez.com/posts/formatting-notes-and-gotchas/</guid><description>&lt;p>A year ago, we talked about &lt;a href="https://www.andyibanez.com/posts/nsformatter/">using NSFormatter for formatting data in a human readable format&lt;/a>. WWDC2020 brings some updates and changes to the &lt;code>NSFormatter&lt;/code> APIs that we need to be aware of. This article will complement the NSFormatter article from last year with best practices and things to look out for.&lt;/p>
&lt;h1 id="improvements-for-combinations-of-languages-and-regions">Improvements for Combinations of Languages and Regions.&lt;/h1>
&lt;p>&lt;code>NSFormatter&lt;/code> always does its best to format the data according to the user&amp;rsquo;s language and region where relevant. Apple is improving the combinations for this because it&amp;rsquo;s highly common for people to set their phones in a language that is not commonly used in a given region. This is pretty exciting for me, because I live in Bolivia where people speak Spanish, but I have used my devices in English for as long as I can remember.&lt;/p></description></item><item><title>WWDC2020: What's new in CryptoKit</title><link>https://www.andyibanez.com/posts/wwdc2020-whats-new-cryptokit/</link><pubDate>Mon, 14 Sep 2020 07:00:00 -0400</pubDate><guid>https://www.andyibanez.com/posts/wwdc2020-whats-new-cryptokit/</guid><description>&lt;p>CryptoKit, introduced in WWDC2019, allows us to &lt;a href="https://www.andyibanez.com/posts/common-cryptographic-operations-with-cryptokit/">perform cryptographic operations very easily&lt;/a>.&lt;/p>
&lt;p>While CryptoKit still doesn&amp;rsquo;t offer many algorithms and functionality, it&amp;rsquo;s still growing, and this year CryptoKit and do more.&lt;/p>
&lt;h1 id="hkdf">HKDF&lt;/h1>
&lt;p>Key derivation functions have been available from day one, but it wasn&amp;rsquo;t possible to derive keys independently. It was only possible to do so if you were using elliptic curve key agreement protocols.&lt;/p>
&lt;p>To do this, there is a new &lt;code>HKDF&lt;/code> object with static methods. One such method is &lt;code>deriveKey&lt;/code> with multiple overloads:&lt;/p></description></item><item><title>Common Reasons for Background Tasks to Fail in iOS</title><link>https://www.andyibanez.com/posts/common-reasons-background-tasks-fail-ios/</link><pubDate>Wed, 05 Aug 2020 00:00:00 -0400</pubDate><guid>https://www.andyibanez.com/posts/common-reasons-background-tasks-fail-ios/</guid><description>&lt;p>&lt;a href="https://www.andyibanez.com/posts/modern-background-tasks-ios13/">Apple introduced modern background tasks last year on iOS 13&lt;/a>. These new APIs have been out for a little over year (counting the beta period). Many developers have tried to adopt them to moderate success. Many of them have found them to be very unpredictable and that only work a fraction of the time. If you look around the internet (and even on the comments in that article), you will see many developers weren&amp;rsquo;t able to get them to work as expected.&lt;/p></description></item><item><title>New UIDatePicker in iOS 14</title><link>https://www.andyibanez.com/posts/new-uidatepicker-ios14/</link><pubDate>Wed, 08 Jul 2020 07:00:00 -0400</pubDate><guid>https://www.andyibanez.com/posts/new-uidatepicker-ios14/</guid><description>&lt;p>WWDC2020 brought many interesting and unexpected updates to many old and well known APIs. In this article, we will explore what&amp;rsquo;s new with &lt;code>UIDatePicker&lt;/code> on iOS, an API that has existed since the dawn of time and hasn&amp;rsquo;t changed much since its introduction.&lt;/p>
&lt;h1 id="a-short-history-on-pickers">A Short History on Pickers&lt;/h1>
&lt;p>&lt;code>UIDatePicker&lt;/code> is an API that has existed since the very early days of the iOS SDK - it goes all the way back to iOS 2.0.&lt;/p></description></item><item><title>UIMenu Improvements in iOS 14</title><link>https://www.andyibanez.com/posts/uimenu-improvements-ios14/</link><pubDate>Thu, 18 Jun 2020 07:00:00 -0400</pubDate><guid>https://www.andyibanez.com/posts/uimenu-improvements-ios14/</guid><description>&lt;p>&lt;a href="https://developer.apple.com/documentation/uikit/uimenu">&lt;code>UIMenu&lt;/code>&lt;/a> is a new set of APIs that were originally introduced in iOS 13. The API allows us to add menus to different parts of our UIs, including binding actions to key combinations when using your iOS or iPadOS device with a keyboard. Starting on iOS and iPadOS 14 (and ported to macOS Catalyst), this object is more prevalent in the UI thanks to the fact it can be invoqued from different actions.&lt;/p></description></item><item><title>The secret entitlements behind Default Apps on iOS</title><link>https://www.andyibanez.com/posts/default-apps-may-not-be-possible-all-devs/</link><pubDate>Tue, 23 Jun 2020 22:42:31 -0400</pubDate><guid>https://www.andyibanez.com/posts/default-apps-may-not-be-possible-all-devs/</guid><description>&lt;p>I hate that my first WWDC article is going to be as lazy as this, but I thought I&amp;rsquo;d write about it anyway so as to at least give an starting point to devs who will want to try creating their own default web browser or e-mail client on iOS and iPadOS.&lt;/p>
&lt;p>Please note the vast majority of my thoughts here are based on a very short response I received on the dev forums. I may be awfully wrong. I am leaving a link to my original question in the dev forums so you can check it out, and reach your own conclusions. The link can be viewed by anyone and it&amp;rsquo;s not locked behind an Apple Developer membership.&lt;/p></description></item></channel></rss>