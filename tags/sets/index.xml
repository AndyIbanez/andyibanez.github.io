<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Sets on Andy Ibanez</title><link>https://www.andyibanez.com/tags/sets/</link><description>Recent content in Sets on Andy Ibanez</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Wed, 20 Jan 2021 07:00:00 -0400</lastBuildDate><atom:link href="https://www.andyibanez.com/tags/sets/index.xml" rel="self" type="application/rss+xml"/><item><title>Understanding Basic Data Structures in Swift: Sets</title><link>https://www.andyibanez.com/posts/understanding-basic-data-structures-swift-sets/</link><pubDate>Wed, 20 Jan 2021 07:00:00 -0400</pubDate><guid>https://www.andyibanez.com/posts/understanding-basic-data-structures-swift-sets/</guid><description>&lt;p>I&amp;rsquo;m introducing a short small series in which we will talk about basic data structures in Swift. My goal is not to show how they are implemented internally, but rather to show when they can be useful.&lt;/p>
&lt;p>In truth, unless you have studied Computer Science to some capacity, chances are you are missing on a lot of powerful existing data structures that can help you write better code. I have been studying iOS development for a long time with many resources, and none of the resources ever dive into useful data structures, such as &lt;em>sets&lt;/em>. These sources tend to focus on arrays and dictionaries only (as the focus is iOS development, and not necessarily computer science), not teaching other structures that are actually really useful in the iOS Development world. I have never seen an iOS dev resource that covered these structures as deeply as my computer systems engineering courses did.&lt;/p></description></item></channel></rss>