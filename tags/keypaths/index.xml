<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Keypaths on Andy Ibanez</title><link>https://www.andyibanez.com/tags/keypaths/</link><description>Recent content in Keypaths on Andy Ibanez</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Wed, 11 Nov 2020 07:00:00 -0400</lastBuildDate><atom:link href="https://www.andyibanez.com/tags/keypaths/index.xml" rel="self" type="application/rss+xml"/><item><title>Understanding KeyPaths in Swift</title><link>https://www.andyibanez.com/posts/understanding-keypaths-swift/</link><pubDate>Wed, 11 Nov 2020 07:00:00 -0400</pubDate><guid>https://www.andyibanez.com/posts/understanding-keypaths-swift/</guid><description>&lt;p>KeyPath. It sounds like a very fancy word. And it is a feature you have likely used it, either knowingly or unknowingly. KeyPaths are one of my favorite features in Swift, but they can be a bit tricky to understand. In this article we will explore what KeyPaths are, and when you may want to use them.&lt;/p>
&lt;h1 id="understanding-keypaths">Understanding KeyPaths&lt;/h1>
&lt;p>In simple words, a KeyPath is a reference to an actual property instead of a value.&lt;/p></description></item></channel></rss>