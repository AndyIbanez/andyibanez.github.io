<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Relativedatetimeformatter on Andy Ibanez</title><link>https://www.andyibanez.com/tags/relativedatetimeformatter/</link><description>Recent content in Relativedatetimeformatter on Andy Ibanez</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Wed, 11 Dec 2019 07:00:00 -0400</lastBuildDate><atom:link href="https://www.andyibanez.com/tags/relativedatetimeformatter/index.xml" rel="self" type="application/rss+xml"/><item><title>Formatting Relative Dates With RelativeDateTimeFormatter</title><link>https://www.andyibanez.com/posts/formatting-relative-dates-relativedatetimeformatter/</link><pubDate>Wed, 11 Dec 2019 07:00:00 -0400</pubDate><guid>https://www.andyibanez.com/posts/formatting-relative-dates-relativedatetimeformatter/</guid><description>&lt;p>Formatting Relative Dates With RelativeDateTimeFormatter&lt;/p>
&lt;p>A few weeks ago we talked about &lt;a href="https://www.andyibanez.com/posts/nsformatter/">formatting content with NSFormatter&lt;/a>, an abstract class from which multiple formatting classes inherit from to allow you to format different kinds of data in a human-readable form. &lt;code>NSFormatter&lt;/code> is not only a class you can inherit from yourself, but as iOS evolves, more formatters will be added to its family. This week, we will explore a new member of this family introduced in iOS 13: &lt;code>RelativeDateTimeFormatter&lt;/code>.&lt;/p></description></item></channel></rss>